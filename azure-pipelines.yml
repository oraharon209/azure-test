trigger:
  branches:
    include:
      - main  # Trigger on pushes to the main branch
      - feature/*  # Trigger on any branch starting with "feature/"

pool:
  vmImage: ubuntu-latest
  name: default

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    steps:
    - checkout: self
      clean: true

    - script: dotnet build
      displayName: 'Build the artifact'

    - script: dotnet pack -p Version=1.0.$(Build.BuildId)
      displayName: 'Create NuGet Package'

    - script: dotnet nuget push --source "hello_world" --api-key az $(System.DefaultWorkingDirectory)/bin/Release/ConsoleApp1.1.0.$(Build.BuildId).nupkg
      displayName: 'Publish NuGet Package'

- stage: SonarQubeScan
  displayName: 'SonarQube Scan Stage'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/feature'))  # Only run this stage for the main branch
  jobs:
  - job: SonarQubeScanJob
    displayName: 'SonarQube Scan Job'
    steps:
    - script: |
        wget https://binaries.sonarsource.com/sonar-scanner-cli/latest/linux-x86-64/sonar-scanner-cli-latest-linux.zip
        unzip sonar-scanner-cli-latest-linux.zip
        chmod +x sonar-scanner-cli
      displayName: 'Install SonarQube Scanner'

    - script: |
        ./sonar-scanner-cli \
          -Dsonar.projectKey=your_project_key \
          -Dsonar.projectName=your_project_name \
          -Dsonar.sources=./src \
          -Dsonar.host.url=http://your_sonarqube_server_url \
          -Dsonar.login=your_sonarqube_username \
          -Dsonar.password=your_sonarqube_password
      displayName: 'Run SonarQube Scan'

    # Add additional steps for SonarQube analysis and reporting as needed
